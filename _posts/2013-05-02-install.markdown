---
layout: default
title: Установка необхідних програм для Rails Girls
permalink: install
---

# Установка необхідних програм для Rails Girls

Для створення додатків на Ruby On Rails необхідно встановити деякі програми на твій комп'ютер.

Обери інструкцію, що підходить для твоєї операційної системи. Не панікуй, якщо виникнуть якісь проблеми: повідом нам, і ми вирішимо їх разом.

* [Setup for OS X](#setup-for-os-x)
* [Setup for Windows](#setup-for-windows)
* [Setup for Linux](#setup-for-linux)
* [Alternative Installment for all OS](#virtual-machine)
* [Using a Cloud Service - No Installation Required](#using-a-cloud-service)

<hr />

## Setup for OS X

### *1.* Спочатку перевіримо версію твоєї операційної ситеми.

Натисни на меню та вибери *About this Mac*.

![Apple menu](/images/1.png "Apple menu")


### *2.* У вікні ти побачиш інформацію про версію твоєї ОС.
Якщо номер версії починається з 10.6, 10.7, 10.8, 10.9, 10.10, 10.11 чи вище, то ця інструкція для тебе. Якщо це інша версія, ти можеш налаштувати машину під час події чи скористатись хмарним варіантом.


![About this Mac dialog](/images/2.png "About this Mac dialog")

### *3a.* Для версії OS X 10.9 та вище:

Якщо у тебе версія 10.9, 10.10, 10.11 чи вище,то тобі необхідно установити homebrew та rbenv

#### *3a1.* Установи Command line tools:

{% highlight sh %}
xcode-select --install
{% endhighlight %}

#### *3a2.* Установи [Homebrew](http://brew.sh/):

{% highlight sh %}
ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
{% endhighlight %}

#### *3a3.* Установи [rbenv](https://github.com/rbenv/rbenv):


{% highlight sh %}
brew update
{% endhighlight %}

{% highlight sh %}
brew install rbenv
{% endhighlight %}

{% highlight sh %}
echo 'eval "$(rbenv init -)"' >> ~/.bash_profile
{% endhighlight %}

{% highlight sh %}
source ~/.bash_profile
{% endhighlight %}

#### *3a4.* Установи Ruby із rbenv:

Найновішу версію ruby ти можеш знайти за допомогою команди "rbenv install -l".

{% highlight sh %}
rbenv install 2.5.3
{% endhighlight %}

Якщо у тебе з'явилась помилка
"OpenSSL::SSL::SSLError: ... : certificate verify failed" спробуй:

{% highlight sh %}
brew install curl-ca-bundle
{% endhighlight %}

{% highlight sh %}
cp /usr/local/opt/curl-ca-bundle/share/ca-bundle.crt `ruby -ropenssl -e 'puts OpenSSL::X509::DEFAULT_CERT_FILE'`
{% endhighlight %}

#### *3a5.* Установка Ruby за замовчуванням

{% highlight sh %}
rbenv global 2.5.3
{% endhighlight %}

#### *3a6.* Встановлюємо rails:

{% highlight sh %}
gem install rails --no-document
{% endhighlight %}

### *3b.* Якщо у тебе OS X версії 10.6, 10.7, or 10.8:
Завантаж RailsInstaller для своєї версії OS X:

* [RailsInstaller for 10.7 and 10.8](http://railsinstaller.s3.amazonaws.com/RailsInstaller-1.0.4-osx-10.7.app.tgz) <span class="muted">(325MB)</span>
* [RailsInstaller for 10.6](http://railsinstaller.s3.amazonaws.com/RailsInstaller-1.0.4-osx-10.6.app.tgz) <span class="muted">(224MB)</span>

Двічі натисни на завантажений файл і він установиться у поточну директорію. Відкрий розархівований файл `RailsInstaller-1.0.4-osx-10.7.app` або `RailsInstaller-1.0.4-osx-10.6.app` і слідуй інструкції установки. Відкриється нове вікно з README файлом з 'Rails Installer OS X'. Будь ласка, **не виконуй** інструкції у цьому файлі.

Якщо версія Rails не була найновішою, ти можеш просто оновити її набравши у терміналі:

{% highlight sh %}
gem update rails --no-ri --no-rdoc
{% endhighlight %}

Для того, щоб переконатись, що все працює запустимо команду сторення додатка

{% highlight sh %}
rails new railsgirls
{% endhighlight %}

### *4.* Встановимо текстовий редактор

Для воркшопу ми рекомендуємо тестовий редактор Atom.

* [Завантажити Atom та встановити](https://atom.io/)

Якщо ти використовуєш Mac OS X 10.7 чи старішу версію, ти можеш використати інший текстовий редактор [Sublime Text 2](http://www.sublimetext.com/2).

### *5.* Оновлення веб оглядача

Відкрий [whatbrowser.org](http://whatbrowser.org) та онови свій веб оглядач, якщо у тебе не остання версія.

### *6.* Перевірка середовища

Check that everything is working by running the application generator command.

{% highlight sh %}
rails new myapp
{% endhighlight %}

{% highlight sh %}
cd myapp
{% endhighlight %}

{% highlight sh %}
rails server
{% endhighlight %}

Go to `http://localhost:3000` in your browser, and you should see the 'Yay! You're on Rails!' page.

Це все! Тепер у тебе все необхідне для створення свого першого додатку на Ruby on Rails ;)

**Coach:** We recommend to verify by using the scaffold command and inputting data with the generated page with coaches to ensure everything is working. Also: remove the test app `myapp` to make super sure no-one is working in the wrong folder, following the steps of the workshop.

<hr />

## Setup for Windows

### *1.* Встановлюємо Rails

Download [RailsInstaller](https://s3.amazonaws.com/railsinstaller/Windows/railsinstaller-3.3.0.exe) and run it. Click through the installer using the default options.

#### *1a.* Enable copy and paste in Windows Command Prompt

For Windows 10 users:

Open `Command Prompt with Ruby and Rails`.
Right-click on the command prompt’s title bar, and choose "Properties".
Navigate to the "options" tab, and check "Enable Ctrl key shortcuts".
(If you don't find it, but have an "experimental" tab,
navigate there and check "Enable new Ctrl key shortcuts" option.
In this case, you may need to check the "Enable experimental console
features" option first.)

For other Windows versions:

To paste a text in the command prompt window you'll need to use the mouse (right-click on the window --> paste).

#### *1b.* Install Rails


Відкрий `Command Prompt with Ruby on Rails` і набери:

{% highlight sh %}
rails -v
{% endhighlight %}

If you see the following message:

{% highlight sh %}
the system cannot find the path specified
{% endhighlight %}

This can happen when the installer cannot correctly setup the paths required to run rails.
It's nothing serious, we can fix this in different ways but the easiest is by manually installing the rails gem with the following command:

{% highlight sh %}
gem install rails bundler --no-document
{% endhighlight %}

This will (re)install rails correctly and running:

{% highlight sh %}
rails -v
{% endhighlight %}

Should print the currently installed rails version number (your version may differ):

{% highlight sh %}
Rails 5.1.1
{% endhighlight %}

If the Rails version is less than 5.1, update it using a following command:

{% highlight sh %}
gem update rails --no-document
{% endhighlight %}

## Можливі помилки

### Gem::RemoteFetcher error

Якщо при запуску `rails new railsgirls` чи `gem update rails` виникає ця помилка:

{% highlight sh %}
Gem::RemoteFetcher::FetchError: SSL_connect returned=1 errno=0 state=SSLv3 read
server certificate B: certificate verify failed (https://rubygems.org/gems/i18n-0.6.11.gem)
{% endhighlight %}

Це означає, що у тебе старіша версія Rubygems і необхідно вручну оновити її вказуючи версію Rubygems

{% highlight sh %}
gem -v
{% endhighlight %}


Якщо версія нижча ніж `2.6.5` необхідно оновити її вручну:

First download the [ruby-gems-update gem](https://rubygems.org/gems/rubygems-update-2.6.11.gem). Move the file to `c:\\rubygems-update-2.6.11.gem` then run:

{% highlight sh %}
gem install --local c:\\rubygems-update-2.6.11.gem
{% endhighlight %}

{% highlight sh %}
update_rubygems --no-document
{% endhighlight %}

Перевіримо версію rubygems

{% highlight sh %}
gem -v
{% endhighlight %}

Make sure it is equal or higher than `2.6.11`. Re-run the command that was failing previously.

If you are still running into problems you can always find the latest version of rubygems online at [rubygems.org](https://rubygems.org/pages/download). If you click on **GEM** you will get the latest version.

### During bundle install

The `Gem::RemoteFetcher::FetchError: SSL_connect` can also occur during the `bundle install` stage when creating a new rails app.

The error will make mention of [bit.ly/ruby-ssl](http://bit.ly/ruby-ssl). What is relevant for Windows users at this point is [this GitHub gist](https://gist.github.com/867550). The described manual way has proven to be successful to solve the `bundle install` error.

### 'x64_mingw' is not a valid platform` Error

Інколи при запуску `rails server` виникає помилка:
`'x64_mingw' is not a valid platform`

Тоді необхідно трохи відредагувати `Gemfile`:

Подивись в кінець файлу. Ти побачиш схожі рядки:
`gem 'tzinfo-data', platforms: [:mingw, :mswin, :x64_mingw]`. Якщо у тебе є рядок з `:x64_mingw`,тоді видали `:x64_mingw`  Вкінці повиннен бути лише рядок:
`'tzinfo-data', platforms: [:mingw, :mswin]`

Після змін введи в командному рядку `bundle update`.

### *2.* Встановлюємо текстовий редактор

Для цього воркшопу ми рекомендуємо текстовий редактор Atom.

* [Download Atom and install it](https://github.com/atom/atom/releases/latest)
  * Завантажимо архів atom zip для windows та розархівуємо його.
  * Скопіюємо директорію у Program Files.
  * Запускаємо atom у директорії

Якщо ви використовуєте Windows Vista чи старіші версії, ви можете використати інший редактор [Sublime Text 2](http://www.sublimetext.com/2).

### *3.* Оновлення веб оглядача

Якщо ти використовуєш Internet Explorer, ми рекомендуємо установити [Firefox](mozilla.org/firefox) або [Google Chrome](google.com/chrome).

Відкрий [whatbrowser.org](http://whatbrowser.org) та онови свій браузер, якщо у тебе не остання версія.

### *4.* Install Node.js

* Go to [https://nodejs.org/](https://nodejs.org/) and install Node.js LTS package
* Reopen your Rails Command Shell

Check your version of node

{% highlight sh %}
node --version
{% endhighlight %}

Make sure it is displaying version number.

### *5.* Check the environment

Check that everything is working by running the application generator command.

{% highlight sh %}
rails new myapp
{% endhighlight %}

{% highlight sh %}
cd myapp
{% endhighlight %}

{% highlight sh %}
rails server
{% endhighlight %}

Go to `http://localhost:3000` in your browser, and you should see the 'Yay! You're on Rails!' page.

Now you should have a working Ruby on Rails programming setup. Congrats!

**Coach:** We recommend to verify by using the scaffold command and inputting data with the generated page with coaches to ensure everything is working. Also: remove the test app `myapp` to make super sure no-one is working in the wrong folder, following the steps of the workshop.

<hr />

## Setup for Linux

### *1.* Установка Rails


Для того, щоб установити Ruby on Rails необхідно просто скопіювати команду для твого дистрибутива Linux (Ubuntu чи Fedora), вставити команду у термінал та, набравшись терпіння, спостерігати, як пролітають команди на моніторі.

#### Для Ubuntu:

{% highlight sh %}
sudo apt-get install curl
{% endhighlight %}

{% highlight sh %}
bash < <(curl -sL https://raw.github.com/railsgirls/installation-scripts/master/rails-install-ubuntu.sh)
{% endhighlight %}

Якщо ти будеш використовувати RVM установку з gnome-terminal, то тут ти можеш знайти додаткову інформацію: [RVM documentation](http://rvm.io/integration/gnome-terminal).

#### For Fedora:

{% highlight sh %}
bash < <(curl -sL https://raw.github.com/railsgirls/installation-scripts/master/rails-install-fedora.sh)
{% endhighlight %}

Для того, щоб переконатись, що все працює запустимо команду сторення додатка

{% highlight sh %}
rails new myapp
{% endhighlight %}


### *2.* Встановлення текстового редактора

Для воркшопу ми рекомендуємо текстовий редактор Sublime Text.

* [Завантажити і встановити Sublime Text](http://www.sublimetext.com/2)


### *3.* Оновлення браузера

Відкрий [whatbrowser.org](http://whatbrowser.org) та онови свій браузер, якщо у тебе не остання версія.

### *4.* Check the environment

Check that everything is working by running the application generator command.

{% highlight sh %}
rails new myapp
{% endhighlight %}

{% highlight sh %}
cd myapp
{% endhighlight %}

{% highlight sh %}
rails server
{% endhighlight %}

Go to `http://localhost:3000` in your browser, and you should see the 'Yay! You're on Rails!' page.

Це все! Тепер у тебе все необхідне для створення свого першого додатку на Ruby on Rails ;)

**Coach:** We recommend to verify by using the scaffold command and inputting data with the generated page with coaches to ensure everything is working. Also: remove the test app `myapp` to make super sure no-one is working in the wrong folder, following the steps of the workshop.

<hr />

## Virtual Machine

Замість установки всіх програм на свій ноутбук ти можеш встановити середовище програмування на віртуальній машині. Тут детальніше про налаштування віртуального середовища: [Virtual machine]({% post_url 2014-03-24-alternative-dev-environment %}).

<hr />

## Using a Cloud Service


Instead of installing Ruby on Rails and an editor on your computer, you can use a webservice for development. All you need is a browser and an internet connection. This guide explains how to get started with [codenvy.io](https://codenvy.io). If you're using a different service, they may use a different wording, but the process is usually pretty similar.

### *1.* Update your browser

If you use Internet Explorer, we recommend installing [Firefox](mozilla.org/firefox) or [Google Chrome](google.com/chrome).

Open [whatbrowser.org](http://whatbrowser.org) and update your browser if you don't have the latest version.

### *2.* Create an account

Go to [codenvy.io](https://codenvy.io) and signup for free.
You will need to confirm your email and then fill in your details.

![](/images/codenvy/codenvy-create-one.png)

### *3.* Setup a workspace for Ruby on Rails

The Ruby on Rails Workspace has all the software we need for the workshop already preinstalled.
To create a workspace, log into [codenvy.io](https://codenvy.io) and click on 'Dashboard'.
If no workspace has been created yet, the 'New Workspace' view is displayed.

![](/images/codenvy/codenvy-dashboard-create-workspace.png)

In the 'New Workspace' view, a few settings have to be made.

* Give the workspace a name of your choice. In the example this is "railsgirls".
* From "Select Stack", select "Quick Start", scroll down and select "Rails"
* Now click on 'Create' to create the workspace (it takes a moment for the process to finish)

![](/images/codenvy/codenvy-rails-stack.png)

* Codenvy creates a folder '/projects' during initialization,
in which you can later put your code.

![](/images/codenvy/codenvy-workspace-layout.png)

### *4.* Find and restart your workspace

* If you've just created your project, you can probably skip these steps - they're good to know if you login to Codenvy again later
* If you haven't used your workspace or projects in a while, they might have been shutdown due to inactivity.
  You will notice an empty circle displayed next to the workspace name.

![](/images/codenvy/start-workspace.jpg)

* In this case simply click on the name of the workspace. It will then be restarted (which can take a while) and afterwards opened.
* If you have restarted a workspace, you need to run the `bundle` command again in the directory of your Rails project (you will learn more about the command in the app tutorial)

### *5.* Coding with your project

![](/images/codenvy/codenvy-layout-with-project.png)

* On the left hand side, you find a file browser where you can navigate your directories and file
* In the middle, you find the editor where you can modify your files
* At the bottom, you find the terminal where you can run commands
* Everything you need is right here in you browser window - you do not need to start an editor or terminal anywhere else
* If you are following a guide or tutorial, use the commands for Linux even if you are on a Windows computer - your operating system does not matter, since all commands are run on your project's machine in the cloud, which is running Linux
* If a guide or tutorial asks you to run a rails command that contains `rails` or `rake`, prepend `bundle exec` to this command, e. g. `bundle exec rails db:migrate`. Exception: the `rails new` command is not prefixed.
* If a guide or tutorial asks you to start the rails server with `rails server` or `rails s`, append `-b 0.0.0.0` to this command so that you run `rails server -b 0.0.0.0`
* If a guide or tutorial asks you to point your browser to something like `http://localhost:3000`, follow these instructions instead:

  * Go to ‘[Workspaces](https://codenvy.io/dashboard/#/workspaces)’ and click your running workspace
    ![](/images/codenvy/workspace-settings.jpg)

  * Click ‘Runtime’, then ‘dev-machine’ to view the details
    ![](/images/codenvy/runtime.jpg)

  * Scroll down to 'Servers', and copy the Address entry in the line starting
    with 'server-3000-tcp'
    ![](/images/codenvy/get-workspace-ip.jpg)

    For example, if the tutorial wants you to visit `http://localhost:3000/posts`, you would open the URL `http://node3.codenvy.io:33079/posts` instead.

![](/images/codenvy/codenvy-app-url.png)
